# The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
# 
# 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
# 
# Let us list the factors of the first seven triangle numbers:
# 
#      1: 1
#      3: 1,3
#      6: 1,2,3,6
#     10: 1,2,5,10
#     15: 1,3,5,15
#     21: 1,3,7,21
#     28: 1,2,4,7,14,28
# 
# We can see that 28 is the first triangle number to have over five divisors.
# 
# What is the value of the first triangle number to have over five hundred divisors?


def has_over_500_divisors(num)
    count = 0
    found_flag = false
      if(num > 500 )
    	  for i in 1..num
    	     count+= 1 if(num%i == 0)
    	     found_flag = true if(count > 500)
    	     break if found_flag
          end
      end
  puts "\nThe value of count is"
  print count
  return found_flag
end


def triangle_num(tp,n)
    
    return tp+n
    
end


def triangle_num_with_more_than_500_divs
   tp = 7183945
   i=3791
   loop do
      tp = triangle_num(tp,i)
      puts "\n Value of tp is"
      print tp
      return tp if has_over_500_divisors(tp)
      i+=1 
   end 
end

triangle_num_with_more_than_500_divs

# when you encounter a return statement, it automatically exits out of the loop
#  No need of  a specific break statement